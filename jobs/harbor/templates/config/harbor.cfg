## Configuration file of Harbor

#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!
_version = 1.6.0

#The IP address or hostname to access admin UI and registry service.
#DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.
hostname = <%= p("hostname", spec.ip) %>

#The protocol for accessing the UI and token/notification service, by default it is http.
#It can be set to https if ssl is enabled on nginx.
ui_url_protocol = <%= p("ui_url_protocol") %>

#Maximum number of job workers in job service  
max_job_workers = <%= p("max_job_workers") %>


#Determine whether or not to generate certificate for the registry's token.
#If the value is on, the prepare script creates new root cert and private key 
#for generating token to access the registry. If the value is off the default key/cert will be used.
#This flag also controls the creation of the notary signer's cert.
customize_crt = <%= p("customize_crt") %>

#The path of cert and key files for nginx, they are applied only the protocol is set to https
ssl_cert = /data/cert/server.crt
ssl_cert_key = /data/cert/server.key

#The path of secretkey storage
secretkey_path = /data

#Admiral's url, comment this attribute, or set its value to NA when Harbor is standalone
admiral_url = <%= p("admiral_url") %>

#Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.
log_rotate_count = <%= p("log_rotate_count") %>
#Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes. 
#If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G 
#are all valid.
log_rotate_size = <%= p("log_rotate_size") %>

#Config http proxy for Clair, e.g. http://my.proxy.com:3128
#Clair doesn't need to connect to harbor ui container via http proxy.
http_proxy = <%= p("http_proxy") %>
https_proxy = <%= p("https_proxy") %>
no_proxy = <%= p("no_proxy") %>

#NOTES: The properties between BEGIN INITIAL PROPERTIES and END INITIAL PROPERTIES
#only take effect in the first boot, the subsequent changes of these properties 
#should be performed on web ui

#************************BEGIN INITIAL PROPERTIES************************

#Email account settings for sending out password resetting emails.

#Email server uses the given username and password to authenticate on TLS connections to host and act as identity.
#Identity left blank to act as username.
email_identity = <%= p("email.identity", "") %>

email_server = <%= p("email.server", "smtp.mydomain.com") %>
email_server_port = <%= p("email.port") %>
email_username = <%= p("email.username", "sample_admin@mydomain.com") %>
email_password = <%= p("email.password", "sample_password") %>
email_from = <%= p("email.from", "admin <sample_admin@mydomain.com>") %>
email_ssl = <%= p("email.ssl", "false") %>
email_insecure = <%= p("email.insecure", "false") %>

##The initial password of Harbor admin, only works for the first time when Harbor starts. 
#It has no effect after the first launch of Harbor.
#Change the admin password from UI after launching Harbor.
harbor_admin_password = <%= p("admin_password") %>

##By default the auth mode is db_auth, i.e. the credentials are stored in a local database.
#Set it to ldap_auth if you want to verify a user's credentials against an LDAP server.
auth_mode = <%= p("auth_mode") %>

#The url for an ldap endpoint.
ldap_url = <%= p("ldap.url") %>

<% if_p("ldap.searchdn") do |searchdn| %>
#A user's DN who has the permission to search the LDAP/AD server. 
#If your LDAP/AD server does not support anonymous search, you should configure this DN and ldap_search_pwd.
ldap_searchdn = <%= searchdn %>
<% end %>

<% if_p("ldap.searchpwd") do |searchpwd| %>
#the password of the ldap_searchdn
ldap_search_pwd = <%= searchpwd %>
<% end %>

#The base DN from which to look up a user in LDAP/AD
ldap_basedn = <%= p("ldap.basedn") %>

#The base group DN from which to look up a admin in LDAP/AD
ldap_group_admin_dn = <%= p("ldap.group_admin_dn") %>

<% if_p("ldap.filter") do |filter| %>
#Search filter for LDAP/AD, make sure the syntax of the filter is correct.
ldap_filter = <%= filter %>
<% end %>

# The attribute used in a search to match a user, it could be uid, cn, email, sAMAccountName or other attributes depending on your LDAP/AD  
ldap_uid = <%= p("ldap.uid") %> 

#the scope to search for users, 1-LDAP_SCOPE_BASE, 2-LDAP_SCOPE_ONELEVEL, 3-LDAP_SCOPE_SUBTREE
ldap_scope = <%= p("ldap.scope") %> 

#Timeout (in seconds)  when connecting to an LDAP Server. The default value (and most reasonable) is 5 seconds.
ldap_timeout = <%= p("ldap.timeout") %>

#Verify SSL certificate of LDAP server
ldap_verify_cert = <%= p("ldap.verify_cert") %>

#The base dn from which to lookup a group in LDAP/AD
ldap_group_basedn = <%= p("ldap.group_basedn") %>

#filter to search LDAP/AD group
ldap_group_filter = <%= p("ldap.group_filter") %>

#The attribute used to name a LDAP/AD group, it could be cn, name, etc.
ldap_group_gid = <%= p("ldap.group_gid") %>

#The scope to search for ldap groups. 0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE
ldap_group_scope = <%= p("ldap.group_scope") %>

#Turn on or off the self-registration feature
self_registration = <%= p("self_registration") %>

#The expiration time (in minute) of token created by token service, default is 30 minutes
token_expiration = <%= p("token_expiration") %>

#The flag to control what users have permission to create projects
#The default value "everyone" allows everyone to creates a project. 
#Set to "adminonly" so that only admin user can create project.
project_creation_restriction = <%= p("project_creation_restriction") %>

#************************END INITIAL PROPERTIES************************

#######Harbor DB configuration section#######

#The address of the Harbor database. Only need to change when using external db.
db_host = postgresql

#The password for the root user of Harbor DB. Change this before any production use.
db_password = <%= p("db_password") %>

#The port of Harbor database host
db_port = 5432

#The user name of Harbor database
db_user = postgres

##### End of Harbor DB configuration#######

##########Redis server configuration.############

#Redis connection address
redis_host = redis

#Redis connection port
redis_port = 6379

#Redis connection password
redis_password = 

#Redis connection db index
#db_index 1,2,3 is for registry, jobservice and chartmuseum. 
#db_index 0 is for UI, it's unchangeable
redis_db_index = 1,2,3

##########Redis server configuration.############

##########Clair DB configuration############

#Clair DB host address. Only change it when using an exteral DB.
clair_db_host = postgresql
#The password of the Clair's postgres database. Only effective when Harbor is deployed with Clair.
#Please update it before deployment. Subsequent update will cause Clair's API server and Harbor unable to access Clair's database.
clair_db_password = <%= p("db_password") %>
#Clair DB connect port
clair_db_port = 5432
#Clair DB username
clair_db_username = postgres
#Clair default database
clair_db = postgres

#The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.
clair_updaters_interval = <%= p("clair_updater_interval") %>

##########End of Clair DB configuration############

#The following attributes only need to be set when auth mode is uaa_auth
uaa_endpoint = <%= p("uaa.url") %>
uaa_clientid = <%= p("uaa.client_id") %>
uaa_clientsecret= <%= p("uaa.client_secret") %>
uaa_verify_cert = <%= p("uaa.verify_cert") %>
uaa_ca_cert = /data/cert/uaa_ca.crt


### Docker Registry settings ###

#registry_storage_provider can be: filesystem, s3, gcs, azure, etc.
registry_storage_provider_name = <%= p("registry_storage_provider.name") %>

#registry_storage_provider_config is a comma separated "key: value" pairs, e.g. "key1: value, key2: value2".
#Refer to https://docs.docker.com/registry/configuration/#storage for all available configuration.
registry_storage_provider_config = <%= p("registry_storage_provider.config") %>
registry_custom_ca_bundle = /data/cert/trusted_certificates.crt
reload_config=false
skip_reload_env_pattern=(^EMAIL.*)|(PROJECT_CREATION_RESTRICTION)|(SELF_REGISTRATION)|(UAA_VERIFY_CERT)|(^LDAP.*)

